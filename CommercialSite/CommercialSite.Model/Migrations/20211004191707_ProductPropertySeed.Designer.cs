// <auto-generated />
using System;
using CommercialSite.Model.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CommercialSite.Model.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20211004191707_ProductPropertySeed")]
    partial class ProductPropertySeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("CommercialSite.Model.Entities.Brand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15);

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15);

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("UpdatedUserId");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7d6f946b-b2bf-4cfc-bc2e-aab6b83dde10"),
                            BrandName = "ACER",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("5128d02c-37d8-4aef-916d-25be1fd7ca6f"),
                            BrandName = "Lenovo",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("f292582c-d5f3-4257-b54b-03dde5c47eec"),
                            BrandName = "Samsung",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("75f0c2da-8cf4-458b-b2d4-a2704c2d0b61"),
                            BrandName = "Apple",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b3cfba9b-4efe-4d6c-8139-9cb7088eb0ff"),
                            BrandName = "Xiaomi",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("689c8100-a3e1-4742-b8ba-1dee59040a44"),
                            BrandName = "Oppo",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("6146a5a3-7193-4aad-a696-7f5ca5b34609"),
                            BrandName = "Philips",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0144111f-db01-4e60-827e-5daaab74f89c"),
                            BrandName = "LG",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("277a0088-dbd2-4b0e-aa27-2dfca826debf"),
                            BrandName = "Reeder",
                            Status = 1
                        });
                });

            modelBuilder.Entity("CommercialSite.Model.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15);

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15);

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("UpdatedUserId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8a76ed2a-13cc-4ab1-9b63-9d93d0dadc6f"),
                            CategoryName = "Bilgisayar",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("92d9dcca-0fe6-4aa6-bd6f-afea0b2bf1de"),
                            CategoryName = "Telefon",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b5576cd8-ad2a-4590-832d-9976781fc28e"),
                            CategoryName = "Tablet",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("f256c26b-1eee-4bba-b4f5-bb2f5278856a"),
                            CategoryName = "Televizyon",
                            Status = 1
                        });
                });

            modelBuilder.Entity("CommercialSite.Model.Entities.CommentReaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15);

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductCommentId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15);

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("ProductCommentId");

                    b.HasIndex("UpdatedUserId");

                    b.ToTable("CommentReactions");
                });

            modelBuilder.Entity("CommercialSite.Model.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15);

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<double?>("DiscountPrice")
                        .HasColumnType("double precision");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Rate")
                        .HasColumnType("integer");

                    b.Property<int?>("ReviewNumber")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15);

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.Property<double>("WithoutDiscountPrice")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("UpdatedUserId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b0c45f38-e5d5-4580-bea6-00886c4852a2"),
                            BrandId = new Guid("2cb8bfab-ff82-41bd-bf39-84d3e5b6ef89"),
                            CategoryId = new Guid("9361933a-b73c-4d1d-9dd1-ecfc816b3e6d"),
                            DiscountPrice = 12.199,
                            ProductName = "Acer Nitro 5 Intel Core i7 10750H",
                            Rate = 4,
                            ReviewNumber = 0,
                            Status = 0,
                            WithoutDiscountPrice = 14.999000000000001
                        },
                        new
                        {
                            Id = new Guid("1438130b-0912-4358-b3b5-5f7dd9665147"),
                            BrandId = new Guid("2cb8bfab-ff82-41bd-bf39-84d3e5b6ef89"),
                            CategoryId = new Guid("9361933a-b73c-4d1d-9dd1-ecfc816b3e6d"),
                            DiscountPrice = 17.998999999999999,
                            ProductName = "Acer Predator Triton 500 Intel Core i7 10750H",
                            Rate = 5,
                            ReviewNumber = 0,
                            Status = 0,
                            WithoutDiscountPrice = 23.959
                        },
                        new
                        {
                            Id = new Guid("db6036ae-1b5d-4838-acfc-ff79b3bacfc6"),
                            BrandId = new Guid("af6273bb-dc30-4a61-9aeb-8225636f564a"),
                            CategoryId = new Guid("9361933a-b73c-4d1d-9dd1-ecfc816b3e6d"),
                            DiscountPrice = 7.5990000000000002,
                            ProductName = "Lenovo IdeaPad Gaming 3 AMD Ryzen 5 4600H",
                            Rate = 3,
                            ReviewNumber = 0,
                            Status = 0,
                            WithoutDiscountPrice = 11.109
                        },
                        new
                        {
                            Id = new Guid("7de72c10-7ad4-42c2-8419-978c04e18181"),
                            BrandId = new Guid("076bff1f-6c72-4eca-9bf9-1fe491a108b4"),
                            CategoryId = new Guid("8d0de41d-191a-469f-8909-61c169df2d8e"),
                            DiscountPrice = 4.899,
                            ProductName = "Samsung Galaxy Tab S7 SM-T870 128 GB Tablet",
                            Rate = 4,
                            ReviewNumber = 0,
                            Status = 0,
                            WithoutDiscountPrice = 5.7990000000000004
                        },
                        new
                        {
                            Id = new Guid("429ea140-994b-42d6-ac96-0a070c3a23e2"),
                            BrandId = new Guid("af6273bb-dc30-4a61-9aeb-8225636f564a"),
                            CategoryId = new Guid("8d0de41d-191a-469f-8909-61c169df2d8e"),
                            DiscountPrice = 1.829,
                            ProductName = "Lenovo TAB M10 TB-X606F 64GB 10.3 Wi Fi Tablet Gri ZA5T0215TR",
                            Rate = 4,
                            ReviewNumber = 0,
                            Status = 0,
                            WithoutDiscountPrice = 2.9990000000000001
                        },
                        new
                        {
                            Id = new Guid("874e4251-38c1-4118-abfb-063a2a9c7b44"),
                            BrandId = new Guid("e49c6a75-5835-471e-918a-3345bbb26809"),
                            CategoryId = new Guid("8d0de41d-191a-469f-8909-61c169df2d8e"),
                            DiscountPrice = 1.399,
                            ProductName = "Reeder M10 Blue Max 64GB 4G LTE",
                            Rate = 4,
                            ReviewNumber = 0,
                            Status = 0,
                            WithoutDiscountPrice = 2.2989999999999999
                        },
                        new
                        {
                            Id = new Guid("e6dfbb90-c1a7-4ee4-97a6-974efdeaaaef"),
                            BrandId = new Guid("1a7c509d-42e2-4213-a944-212f07222084"),
                            CategoryId = new Guid("21f8242e-dd3a-4280-85ad-3bce8bbe4c8c"),
                            DiscountPrice = 4.399,
                            ProductName = "LG 43UN71006LB 43 Inç 108 Ekran Uydu Alıcılı 4K Ultra HD Smart LED TV",
                            Rate = 4,
                            ReviewNumber = 0,
                            Status = 0,
                            WithoutDiscountPrice = 5.9989999999999997
                        },
                        new
                        {
                            Id = new Guid("9acd84ef-1117-485a-8aa3-a393a7636d4f"),
                            BrandId = new Guid("6520d7be-be4d-4b0d-a222-7e3d90c42de1"),
                            CategoryId = new Guid("21f8242e-dd3a-4280-85ad-3bce8bbe4c8c"),
                            DiscountPrice = 5.1989999999999998,
                            ProductName = "Philips 50PUS7805 50 Inç 126 Ekran Uydu Alıcılı 4K Ultra HD LED Smart TV",
                            Rate = 4,
                            ReviewNumber = 0,
                            Status = 0,
                            WithoutDiscountPrice = 8.1989999999999998
                        },
                        new
                        {
                            Id = new Guid("b2954a75-0aa6-4820-afc0-5039a8e32b96"),
                            BrandId = new Guid("e49c6a75-5835-471e-918a-3345bbb26809"),
                            CategoryId = new Guid("afa8a153-6eed-4ad2-a453-dc6d2f86caab"),
                            DiscountPrice = 1.5489999999999999,
                            ProductName = "Reeder P13 Blue Max 64 GB (Reeder Türkiye Garantili)",
                            Rate = 3,
                            ReviewNumber = 0,
                            Status = 0,
                            WithoutDiscountPrice = 2.0489999999999999
                        },
                        new
                        {
                            Id = new Guid("0420f4ed-a836-4779-b28f-00cfa7d46b00"),
                            BrandId = new Guid("14534656-c0d2-44cf-922c-6fc83a21c203"),
                            CategoryId = new Guid("afa8a153-6eed-4ad2-a453-dc6d2f86caab"),
                            DiscountPrice = 3.3180000000000001,
                            ProductName = "Oppo Reno 4 Lite 128 GB (Oppo Türkiye Garantili)",
                            Rate = 4,
                            ReviewNumber = 0,
                            Status = 0,
                            WithoutDiscountPrice = 3.5990000000000002
                        },
                        new
                        {
                            Id = new Guid("01fb323b-6eef-4904-9694-ef155b4f178f"),
                            BrandId = new Guid("ad3869c4-0631-4d56-8fc3-12b9afd7d40a"),
                            CategoryId = new Guid("afa8a153-6eed-4ad2-a453-dc6d2f86caab"),
                            DiscountPrice = 4.2990000000000004,
                            ProductName = "Xiaomi Redmi Note 10 Pro 128 GB 8 GB RAM (Xiaomi Türkiye Garantili)",
                            Rate = 4,
                            ReviewNumber = 0,
                            Status = 0,
                            WithoutDiscountPrice = 3.7989999999999999
                        },
                        new
                        {
                            Id = new Guid("6fb1d627-e4b9-4cc4-8543-750faa03c380"),
                            BrandId = new Guid("076bff1f-6c72-4eca-9bf9-1fe491a108b4"),
                            CategoryId = new Guid("afa8a153-6eed-4ad2-a453-dc6d2f86caab"),
                            DiscountPrice = 11.249000000000001,
                            ProductName = "Samsung Galaxy Note 20 Ultra 256 GB (Samsung Türkiye Garantili)",
                            Rate = 4,
                            ReviewNumber = 0,
                            Status = 0,
                            WithoutDiscountPrice = 12.298999999999999
                        },
                        new
                        {
                            Id = new Guid("56d238a5-2843-4a47-917c-323562969c6e"),
                            BrandId = new Guid("877bdb84-f2f3-4143-aae4-b1a5e6103781"),
                            CategoryId = new Guid("afa8a153-6eed-4ad2-a453-dc6d2f86caab"),
                            DiscountPrice = 13.999000000000001,
                            ProductName = "iPhone XS Max 256 GB",
                            Rate = 4,
                            ReviewNumber = 0,
                            Status = 0,
                            WithoutDiscountPrice = 14.999000000000001
                        });
                });

            modelBuilder.Entity("CommercialSite.Model.Entities.ProductComment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("character varying(1024)")
                        .HasMaxLength(1024);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15);

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<string>("Rate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int?>("ThumbDown")
                        .HasColumnType("integer");

                    b.Property<int?>("ThumbsUp")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15);

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UpdatedUserId");

                    b.ToTable("ProductComments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("56ccfba1-d5e3-4aaf-8626-d17428d2f301"),
                            Comment = "cihaz harika ancak 2080 max-q olması desktop versiyonda 2070'e denk geldiği nutulmamalı.Oyunlarda overclocklu hali ile gayet tatmin edici fps'ler sunuyor.tavsiye olunur.",
                            CreatedDate = new DateTime(2021, 10, 4, 22, 17, 6, 493, DateTimeKind.Local).AddTicks(9655),
                            CreatedUserId = new Guid("88fe5ec9-7b96-4a90-be4d-06a69d95ef42"),
                            ProductId = new Guid("2322717a-d36d-4299-af9f-2b6faedd1423"),
                            Rate = "5",
                            Status = 0,
                            ThumbDown = 4,
                            ThumbsUp = 6
                        },
                        new
                        {
                            Id = new Guid("eaea6889-2037-40aa-9456-7e152049ad87"),
                            Comment = "Öncelikle hızlı kargo gönderimi için Hepsi Buradaya teşekkür ederim. Ürün elime hasarsız bir ekilde ulaştı. Kutulama oldukça başarılı. Ürün gerçekten çok kaliteli. Hem iş hem de oyun amaçlı olarak ullanılabiliyor. Performans olarak Harika bir ürün herkese gönül rahatlığıyla tavsiye ederim.",
                            CreatedDate = new DateTime(2021, 10, 4, 22, 17, 6, 494, DateTimeKind.Local).AddTicks(1168),
                            CreatedUserId = new Guid("88fe5ec9-7b96-4a90-be4d-06a69d95ef42"),
                            ProductId = new Guid("2322717a-d36d-4299-af9f-2b6faedd1423"),
                            Rate = "5",
                            Status = 0,
                            ThumbDown = 4,
                            ThumbsUp = 6
                        },
                        new
                        {
                            Id = new Guid("e2a5ecf4-2a8f-4573-99f2-427b3d7fea09"),
                            Comment = "Ürün gayet başarılı, 512 gb ssdli modeli yerine tercih ettim, kurulum sıkıntı oldu, riverleri mutlaka lenovonun kendi sitesinden indirmenizi tavsiye ederim, satıcı güzel, iletişimi iyiydi.",
                            CreatedDate = new DateTime(2021, 10, 4, 22, 17, 6, 494, DateTimeKind.Local).AddTicks(1225),
                            CreatedUserId = new Guid("88fe5ec9-7b96-4a90-be4d-06a69d95ef42"),
                            ProductId = new Guid("49669332-44e1-4696-84c0-9ab229061315"),
                            Rate = "5",
                            Status = 0,
                            ThumbDown = 4,
                            ThumbsUp = 6
                        },
                        new
                        {
                            Id = new Guid("f473da2c-ef11-48f4-8491-2a9aac3b468c"),
                            Comment = "Ürün fotoğraflardaki gibi 3 4 saattir kurulum için kullanıyorum gayet hızlı.İstanbul içinde seniz kargo süreci çok hızlı bir şekilde işliyor. Free dos olduğu için format attıktan sonra ilk iş windowsu son sürümegüncelleyin daha sonra kurulum yapın.Lenovo sitesindeki sürücülerin bazıları windows son sürüm olmadığı için kurulmuyorözellikle ekran kartları. Klavye hissiyatı çok iyi. Satıcı ilgili aradığımda direkt çözüm odaklı konuştular. Gerekli azılımları indirmenizi tavsiye ederim. Düşünmeden alabilirsiniz",
                            CreatedDate = new DateTime(2021, 10, 4, 22, 17, 6, 494, DateTimeKind.Local).AddTicks(1239),
                            CreatedUserId = new Guid("88fe5ec9-7b96-4a90-be4d-06a69d95ef42"),
                            ProductId = new Guid("a7630777-3514-46e6-8f46-ff84d48a32a8"),
                            Rate = "5",
                            Status = 0,
                            ThumbDown = 4,
                            ThumbsUp = 6
                        },
                        new
                        {
                            Id = new Guid("4df19040-389f-4cbf-9cc7-fa3f0b08e041"),
                            Comment = "Ürün iyi hoş güzel de aga bu nasıl bir dolar kuru, adam bunu 400 500 lira sayıp alıyor biz iye 2 asgari ücretten fazla koyuyoz Allah aşkına ya.  Not: Almanya bizi kıskanıyor :'(",
                            CreatedDate = new DateTime(2021, 10, 4, 22, 17, 6, 494, DateTimeKind.Local).AddTicks(1251),
                            CreatedUserId = new Guid("88fe5ec9-7b96-4a90-be4d-06a69d95ef42"),
                            ProductId = new Guid("cf64d3ff-a595-4f9e-a4d6-11ebc21905aa"),
                            Rate = "5",
                            Status = 0,
                            ThumbDown = 4,
                            ThumbsUp = 6
                        },
                        new
                        {
                            Id = new Guid("519da5d4-806d-4e30-bd5d-7541795e757a"),
                            Comment = "Öncelikle Ürünü alış sebebim laptopu internette bişeyler bakmak, alışveriş yapmak sosyal edyada takılmak için kullanırken ağır olması şarjının çok gitmemesiydi. Ben öyle oyun oynayan biri değilim o yüzden yun performansı açısından bir değerlendirme yapamayacağım. Ürün beklediğim gibi. Bilgisayardan google chrome'a nasıl idiyorsanız bu cihazla da aynen girebiliyorsunuz. Şarj konusuna gelirsek net 6 saat ekran açık İnternette ezinebiliyorsunuz. Cihazın hoparlörlerinden gelen ses çok başarılı ancak kulaklık konusunda çok iddialı değil. Aşağıda orumda arkadaş usb bellekleri görmüyor demiş ben çatır çutur takıyorum gayette görüyor. Cihazın iki kusuru var bence irincisi yeni olduğundan dolayı kılıf olsun ekran koruyucu olsun bu tarz aksesuarlar açısından sıkıntısı var. İkincisi e batarya biraz daha büyük olabilirdi. Ancak şunu da söyleyeyim bu aralar işe gitmiyor oluşum ve cihazın yeni oluşundanötürü sürekli elimde olması da pilini yeterli bulmamamda etkili bir faktördür. Sonuç olarak benim aldığım amaçla lacaklara tavsiye ederim.Kargo gayet hızlı sitenin tahmini olarak size söylediği tarihten 2 gün önce elinize laşıyor.",
                            CreatedDate = new DateTime(2021, 10, 4, 22, 17, 6, 494, DateTimeKind.Local).AddTicks(1275),
                            CreatedUserId = new Guid("88fe5ec9-7b96-4a90-be4d-06a69d95ef42"),
                            ProductId = new Guid("ebf25e2d-15e5-4133-ad82-156f83f4ce96"),
                            Rate = "5",
                            Status = 0,
                            ThumbDown = 4,
                            ThumbsUp = 6
                        },
                        new
                        {
                            Id = new Guid("d2cda618-efe0-462a-9846-fcb41aa6554b"),
                            Comment = "Televizyonun Artıları: + iPhone ile tam uyumlu olması + Hızlı açılış süresi + Menülerdeki kıcılık + Fiyat performans ürünü Eksileri - Kanal geçişleri bazen can sıkabiliyor - Menünün bazı kısımları yavaş alışıyor - Görüntü ayarlarında istenen rengi yakalamak olması gerekenden zor. Genel olarak ben üründen memnunum.Daha yi olabilirdi ancak o zamanda tabiki fiyatı daha da yüksek olacaktı.Ayrıca satın aldığım satıcının paketlemesi oldukça yi.Sadece kutusu ile göndermeyip dışına birde kabarcıklı poşet sarması teslimat sırasında kontrol etmenizi çok çok olaylaştırıyor.Satıcının ilgiside gayet iyiydi.Çok teşekkürler.",
                            CreatedDate = new DateTime(2021, 10, 4, 22, 17, 6, 494, DateTimeKind.Local).AddTicks(1289),
                            CreatedUserId = new Guid("88fe5ec9-7b96-4a90-be4d-06a69d95ef42"),
                            ProductId = new Guid("8bc31d49-d44c-43e7-bc87-f9bdd3b37f78"),
                            Rate = "5",
                            Status = 0,
                            ThumbDown = 4,
                            ThumbsUp = 6
                        });
                });

            modelBuilder.Entity("CommercialSite.Model.Entities.ProductDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15);

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductCommentId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductImageId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductPropertyId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ShippingSettingId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15);

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("ProductCommentId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProductImageId");

                    b.HasIndex("ProductPropertyId");

                    b.HasIndex("ShippingSettingId");

                    b.HasIndex("UpdatedUserId");

                    b.ToTable("ProductDetails");
                });

            modelBuilder.Entity("CommercialSite.Model.Entities.ProductImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15);

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15);

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UpdatedUserId");

                    b.ToTable("ProductImages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d5a73322-250d-4f33-9479-0b3615d39b90"),
                            ImageUrl = "1.jpg",
                            ProductId = new Guid("cf64d3ff-a595-4f9e-a4d6-11ebc21905aa"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("6674ef1e-6a01-4d74-af0b-ba2cd325f482"),
                            ImageUrl = "2.jpg",
                            ProductId = new Guid("cf64d3ff-a595-4f9e-a4d6-11ebc21905aa"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("32e0e32f-772e-4795-8f8a-8d916174a941"),
                            ImageUrl = "3.jpg",
                            ProductId = new Guid("cf64d3ff-a595-4f9e-a4d6-11ebc21905aa"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("60bf9fbd-45fa-4eb3-8b30-8716079c261e"),
                            ImageUrl = "4.jpg",
                            ProductId = new Guid("c15eb71a-0120-434c-bbad-8011d796b392"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("2c2a59b2-7b29-4015-9be2-239a56701161"),
                            ImageUrl = "5.jpg",
                            ProductId = new Guid("c15eb71a-0120-434c-bbad-8011d796b392"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("ae10158c-9695-428e-ba17-982ee52c7c61"),
                            ImageUrl = "6.jpg",
                            ProductId = new Guid("c15eb71a-0120-434c-bbad-8011d796b392"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("ddfe4ffa-2d02-443d-a41a-4df765a2eb74"),
                            ImageUrl = "7.jpg",
                            ProductId = new Guid("2322717a-d36d-4299-af9f-2b6faedd1423"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("06d8673f-b72f-44af-aaa0-500b209aecde"),
                            ImageUrl = "8.jpg",
                            ProductId = new Guid("2322717a-d36d-4299-af9f-2b6faedd1423"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("aa3a8b64-ca92-47b1-a3d6-5a9ec83b39fc"),
                            ImageUrl = "9.jpg",
                            ProductId = new Guid("2322717a-d36d-4299-af9f-2b6faedd1423"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("2108c646-2a1b-40c4-87c5-80e1f0714d70"),
                            ImageUrl = "10.jpg",
                            ProductId = new Guid("8bc31d49-d44c-43e7-bc87-f9bdd3b37f78"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("c9877d70-996c-418e-be31-9541460341e6"),
                            ImageUrl = "11.jpg",
                            ProductId = new Guid("8bc31d49-d44c-43e7-bc87-f9bdd3b37f78"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("9bd91543-fe79-4259-a13d-1f3ca8ed9c99"),
                            ImageUrl = "12.jpg",
                            ProductId = new Guid("8bc31d49-d44c-43e7-bc87-f9bdd3b37f78"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("a2529e5a-de10-43ff-b1bb-39eac5cf7501"),
                            ImageUrl = "13.jpg",
                            ProductId = new Guid("b9b5381c-de81-4953-a7ee-9a782b9652da"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("76066ed0-f6c4-4938-aec4-45c5cc9f5d78"),
                            ImageUrl = "14.jpg",
                            ProductId = new Guid("b9b5381c-de81-4953-a7ee-9a782b9652da"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("59afdc0c-e699-4e00-853b-e23b38001155"),
                            ImageUrl = "15.jpg",
                            ProductId = new Guid("44926cd7-1678-4808-a2b0-df95c6f865fc"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("0ac7193e-4e41-43bc-8725-2851610d81e3"),
                            ImageUrl = "16.jpg",
                            ProductId = new Guid("44926cd7-1678-4808-a2b0-df95c6f865fc"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("6820b967-e8de-4138-9659-45ec93bbb901"),
                            ImageUrl = "17.jpg",
                            ProductId = new Guid("44926cd7-1678-4808-a2b0-df95c6f865fc"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("d65c6b56-fe0a-44fd-861e-b86eaa9b15de"),
                            ImageUrl = "18.jpg",
                            ProductId = new Guid("44926cd7-1678-4808-a2b0-df95c6f865fc"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("25f3a545-1ae7-4012-99e9-76a53799cc01"),
                            ImageUrl = "19.jpg",
                            ProductId = new Guid("44926cd7-1678-4808-a2b0-df95c6f865fc"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("40219560-0385-4c95-9b5a-b319d4bfb05c"),
                            ImageUrl = "20.jpg",
                            ProductId = new Guid("49669332-44e1-4696-84c0-9ab229061315"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("173c5c7b-5107-45a8-b5f4-9d452fc3297c"),
                            ImageUrl = "21.jpg",
                            ProductId = new Guid("49669332-44e1-4696-84c0-9ab229061315"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("e970c1ae-f195-4e43-b740-62bb1c800f7f"),
                            ImageUrl = "22.jpg",
                            ProductId = new Guid("49669332-44e1-4696-84c0-9ab229061315"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("83bc94cf-4fed-4cae-a936-677c7683c2f8"),
                            ImageUrl = "23.jpg",
                            ProductId = new Guid("a4518427-e6f0-46bd-bbbd-4dcdaa92966e"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("b6e00706-cb83-4753-a42d-c98eba54ead9"),
                            ImageUrl = "24.jpg",
                            ProductId = new Guid("a4518427-e6f0-46bd-bbbd-4dcdaa92966e"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("5a9d7606-70e5-4363-918c-d02a31e6c229"),
                            ImageUrl = "25.jpg",
                            ProductId = new Guid("a4518427-e6f0-46bd-bbbd-4dcdaa92966e"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("367aaf94-ce74-41dd-be1b-e2acc9fe9282"),
                            ImageUrl = "26.jpg",
                            ProductId = new Guid("a7630777-3514-46e6-8f46-ff84d48a32a8"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("d24351e6-6ccc-4f3e-b6f2-b8130687b894"),
                            ImageUrl = "27.jpg",
                            ProductId = new Guid("a7630777-3514-46e6-8f46-ff84d48a32a8"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("387e558a-aa21-4e04-af8b-ff46f0aaf5df"),
                            ImageUrl = "28.jpg",
                            ProductId = new Guid("a7630777-3514-46e6-8f46-ff84d48a32a8"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("e118b5e5-a389-4be3-ba6d-200fcfcc1b8d"),
                            ImageUrl = "29.jpg",
                            ProductId = new Guid("a7630777-3514-46e6-8f46-ff84d48a32a8"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("e15a7a58-22de-4ef3-bce1-a87d0cecea1a"),
                            ImageUrl = "30.jpg",
                            ProductId = new Guid("ebf25e2d-15e5-4133-ad82-156f83f4ce96"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("e80b7cf6-9c76-4bdd-950d-c3d490bc33be"),
                            ImageUrl = "31.jpg",
                            ProductId = new Guid("ebf25e2d-15e5-4133-ad82-156f83f4ce96"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("d73ff56d-356e-4a55-b3dc-5bfe9cc42f4a"),
                            ImageUrl = "32.jpg",
                            ProductId = new Guid("ebf25e2d-15e5-4133-ad82-156f83f4ce96"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("9c50bd3e-0fb7-4aa6-9630-7ca0c55c8d2a"),
                            ImageUrl = "33.jpg",
                            ProductId = new Guid("ebf25e2d-15e5-4133-ad82-156f83f4ce96"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("e3b536ae-07ce-4a09-8396-f938b0ceb2cd"),
                            ImageUrl = "34.jpg",
                            ProductId = new Guid("ebf25e2d-15e5-4133-ad82-156f83f4ce96"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("1a5a0f3c-8ba2-473c-b8e4-1b4aca2460f3"),
                            ImageUrl = "35.jpg",
                            ProductId = new Guid("e55ae9f3-888d-4c69-a0e7-4403a8292d95"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("26dd25ef-e2ab-444d-959e-c827e6ad537c"),
                            ImageUrl = "36.jpg",
                            ProductId = new Guid("e55ae9f3-888d-4c69-a0e7-4403a8292d95"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("71a5f5ba-933d-492e-81ab-fa4614a71fb0"),
                            ImageUrl = "37.jpg",
                            ProductId = new Guid("e55ae9f3-888d-4c69-a0e7-4403a8292d95"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("79f8145d-7296-4f74-926f-35689c8146dc"),
                            ImageUrl = "38.jpg",
                            ProductId = new Guid("e55ae9f3-888d-4c69-a0e7-4403a8292d95"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("e343f9c8-8c57-4bce-9591-63c0d0ff7095"),
                            ImageUrl = "39.jpg",
                            ProductId = new Guid("e55ae9f3-888d-4c69-a0e7-4403a8292d95"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("5f9a3f6b-322e-4c8b-b740-5bc452844e4e"),
                            ImageUrl = "40.jpg",
                            ProductId = new Guid("e55ae9f3-888d-4c69-a0e7-4403a8292d95"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("7b20a72f-87e7-4203-98dd-c0967c6f8252"),
                            ImageUrl = "41.jpg",
                            ProductId = new Guid("05e3d510-6866-47b9-ad75-3cf2fd330c9c"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("fcc3af92-d1f4-421e-9ccb-b0a94c0a5323"),
                            ImageUrl = "42.jpg",
                            ProductId = new Guid("05e3d510-6866-47b9-ad75-3cf2fd330c9c"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("d49fc694-4db1-46b7-be32-f22a98594b06"),
                            ImageUrl = "43.jpg",
                            ProductId = new Guid("05e3d510-6866-47b9-ad75-3cf2fd330c9c"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("ff1178ac-058a-4db6-8700-f58ca7957344"),
                            ImageUrl = "44.jpg",
                            ProductId = new Guid("67614fef-8f67-4ba5-af0d-f35479d003f2"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("deb87820-b45a-4d2d-8018-6acdefc09c13"),
                            ImageUrl = "45.jpg",
                            ProductId = new Guid("67614fef-8f67-4ba5-af0d-f35479d003f2"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("560e66ba-c374-416e-af5a-5e305e0925e7"),
                            ImageUrl = "46.jpg",
                            ProductId = new Guid("67614fef-8f67-4ba5-af0d-f35479d003f2"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("CommercialSite.Model.Entities.ProductProperty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15);

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15);

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("VarKey")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("VarValue")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UpdatedUserId");

                    b.ToTable("ProductProperties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8f8dd5e0-b846-4cae-b829-193e7b505bc2"),
                            ProductId = new Guid("cf64d3ff-a595-4f9e-a4d6-11ebc21905aa"),
                            Status = 0,
                            VarKey = "Harddisk Kapasitesi",
                            VarValue = "512 GB SSD"
                        },
                        new
                        {
                            Id = new Guid("7a655f86-01ce-4138-9513-041760fbc609"),
                            ProductId = new Guid("cf64d3ff-a595-4f9e-a4d6-11ebc21905aa"),
                            Status = 0,
                            VarKey = "Cihaz Ağırlığı",
                            VarValue = "1 - 2 kg"
                        },
                        new
                        {
                            Id = new Guid("ceb82715-7c72-4d1d-9da0-cfb4047e5af5"),
                            ProductId = new Guid("cf64d3ff-a595-4f9e-a4d6-11ebc21905aa"),
                            Status = 0,
                            VarKey = "Dokunmatik Ekran",
                            VarValue = "Yok"
                        },
                        new
                        {
                            Id = new Guid("ef1ef8ee-f002-4265-abbe-5856c5009895"),
                            ProductId = new Guid("cf64d3ff-a595-4f9e-a4d6-11ebc21905aa"),
                            Status = 0,
                            VarKey = "Ekran Özelliği",
                            VarValue = "IPS"
                        },
                        new
                        {
                            Id = new Guid("6d7eda95-5ff5-48cd-80b0-9f2f8c1c5a9b"),
                            ProductId = new Guid("cf64d3ff-a595-4f9e-a4d6-11ebc21905aa"),
                            Status = 0,
                            VarKey = "Bellek Hızı",
                            VarValue = "2933 MHz"
                        },
                        new
                        {
                            Id = new Guid("5533927a-c9a4-42c9-96ac-4ca9b3c00151"),
                            ProductId = new Guid("cf64d3ff-a595-4f9e-a4d6-11ebc21905aa"),
                            Status = 0,
                            VarKey = "Bellek Yuvası",
                            VarValue = "2"
                        },
                        new
                        {
                            Id = new Guid("24129478-d71f-42bd-b5d0-604aee25e963"),
                            ProductId = new Guid("cf64d3ff-a595-4f9e-a4d6-11ebc21905aa"),
                            Status = 0,
                            VarKey = "Max Ekran Çözünürlüğü",
                            VarValue = "1920 x 1080"
                        },
                        new
                        {
                            Id = new Guid("5abafbb0-4213-4ad5-bf0b-211c2943a3c0"),
                            ProductId = new Guid("cf64d3ff-a595-4f9e-a4d6-11ebc21905aa"),
                            Status = 0,
                            VarKey = "Şarjlı Kullanım Süresi",
                            VarValue = "4 - 6 Saat"
                        },
                        new
                        {
                            Id = new Guid("1082b494-3bce-41a8-b23a-49ee2f2890d2"),
                            ProductId = new Guid("cf64d3ff-a595-4f9e-a4d6-11ebc21905aa"),
                            Status = 0,
                            VarKey = "Temel İşlemci Hızı",
                            VarValue = "2,60 GHz"
                        },
                        new
                        {
                            Id = new Guid("a0703847-8d1b-4665-93e7-efc4422384c5"),
                            ProductId = new Guid("cf64d3ff-a595-4f9e-a4d6-11ebc21905aa"),
                            Status = 0,
                            VarKey = "Klavye",
                            VarValue = "Q Türkçe"
                        },
                        new
                        {
                            Id = new Guid("d8dec40b-3b47-45be-8f4a-73d04d864479"),
                            ProductId = new Guid("cf64d3ff-a595-4f9e-a4d6-11ebc21905aa"),
                            Status = 0,
                            VarKey = "Usb 2.0",
                            VarValue = "Yok"
                        },
                        new
                        {
                            Id = new Guid("988577da-dee4-4140-b27b-9bb84bf90510"),
                            ProductId = new Guid("cf64d3ff-a595-4f9e-a4d6-11ebc21905aa"),
                            Status = 0,
                            VarKey = "USB 3.0",
                            VarValue = "Yok"
                        },
                        new
                        {
                            Id = new Guid("bdde7fa2-8373-4ae6-9c1b-bebc0edb1679"),
                            ProductId = new Guid("cf64d3ff-a595-4f9e-a4d6-11ebc21905aa"),
                            Status = 0,
                            VarKey = "USB 3.1",
                            VarValue = "3"
                        },
                        new
                        {
                            Id = new Guid("4078b6cf-aee8-442e-8488-7ea3d6ae018b"),
                            ProductId = new Guid("cf64d3ff-a595-4f9e-a4d6-11ebc21905aa"),
                            Status = 0,
                            VarKey = "Garanti Süresi (Ay)",
                            VarValue = "24"
                        },
                        new
                        {
                            Id = new Guid("db209cfa-6306-4cbd-929f-5110766546ae"),
                            ProductId = new Guid("c15eb71a-0120-434c-bbad-8011d796b392"),
                            Status = 0,
                            VarKey = "Ekran Boyutu",
                            VarValue = "15,6 inç"
                        },
                        new
                        {
                            Id = new Guid("01ac3b21-b99c-41bc-a936-16909ee4225f"),
                            ProductId = new Guid("c15eb71a-0120-434c-bbad-8011d796b392"),
                            Status = 0,
                            VarKey = "Ekran Kartı",
                            VarValue = "Nvidia GeForce RTX 2080 Super"
                        },
                        new
                        {
                            Id = new Guid("8a8bc970-8fda-4056-a1e4-9f40ba98c6de"),
                            ProductId = new Guid("c15eb71a-0120-434c-bbad-8011d796b392"),
                            Status = 0,
                            VarKey = "İşletim Sistemi",
                            VarValue = "Yok (Free Dos)"
                        },
                        new
                        {
                            Id = new Guid("3e651d72-034c-4919-9bb6-4fabbd9154bf"),
                            ProductId = new Guid("c15eb71a-0120-434c-bbad-8011d796b392"),
                            Status = 0,
                            VarKey = "Ram",
                            VarValue = "8 GB"
                        },
                        new
                        {
                            Id = new Guid("187d5e59-4ea4-403e-bfa8-913f9a1f240e"),
                            ProductId = new Guid("c15eb71a-0120-434c-bbad-8011d796b392"),
                            Status = 0,
                            VarKey = "Harddisk Kapasitesi",
                            VarValue = "1TB SSD"
                        },
                        new
                        {
                            Id = new Guid("cecdc30d-8549-4dc6-8bcd-7ee5b561fbf3"),
                            ProductId = new Guid("2322717a-d36d-4299-af9f-2b6faedd1423"),
                            Status = 0,
                            VarKey = "Ekran Boyutu",
                            VarValue = "15,6 inç"
                        },
                        new
                        {
                            Id = new Guid("536ae186-943d-4a55-a909-250cd9032b7c"),
                            ProductId = new Guid("2322717a-d36d-4299-af9f-2b6faedd1423"),
                            Status = 0,
                            VarKey = "Ekran Kartı",
                            VarValue = "GTX 1650"
                        },
                        new
                        {
                            Id = new Guid("3fc438d8-7b2e-4eca-be23-2d7ad9b0a000"),
                            ProductId = new Guid("2322717a-d36d-4299-af9f-2b6faedd1423"),
                            Status = 0,
                            VarKey = "İşletim Sistemi",
                            VarValue = "Yok (Free Dos)"
                        },
                        new
                        {
                            Id = new Guid("4ab7269b-e924-4b2e-9f3b-62fdd5f6a991"),
                            ProductId = new Guid("2322717a-d36d-4299-af9f-2b6faedd1423"),
                            Status = 0,
                            VarKey = "Ram",
                            VarValue = "16 GB"
                        },
                        new
                        {
                            Id = new Guid("09962ad9-907f-429c-8d8c-1b622bc3681c"),
                            ProductId = new Guid("2322717a-d36d-4299-af9f-2b6faedd1423"),
                            Status = 0,
                            VarKey = "Harddisk Kapasitesi",
                            VarValue = "512 GB SSD"
                        },
                        new
                        {
                            Id = new Guid("a2308512-459e-4079-bab0-f46ac5594d3a"),
                            ProductId = new Guid("05e3d510-6866-47b9-ad75-3cf2fd330c9c"),
                            Status = 0,
                            VarKey = "",
                            VarValue = ""
                        },
                        new
                        {
                            Id = new Guid("eee4d28c-3cd7-408d-87bf-e4b352cff156"),
                            ProductId = new Guid("05e3d510-6866-47b9-ad75-3cf2fd330c9c"),
                            Status = 0,
                            VarKey = "Kamera",
                            VarValue = "Çift Kamera"
                        },
                        new
                        {
                            Id = new Guid("4e7046c7-ec34-4be2-8dfa-20b7f1da4505"),
                            ProductId = new Guid("05e3d510-6866-47b9-ad75-3cf2fd330c9c"),
                            Status = 0,
                            VarKey = "Ekran Boyutu",
                            VarValue = "11 inç"
                        },
                        new
                        {
                            Id = new Guid("a8c105e3-f5f9-4160-92d6-65114ed5963c"),
                            ProductId = new Guid("05e3d510-6866-47b9-ad75-3cf2fd330c9c"),
                            Status = 0,
                            VarKey = "Dahili Hafıza",
                            VarValue = "128 GB"
                        },
                        new
                        {
                            Id = new Guid("044ad007-df38-47cd-a7ae-13dcccee56a5"),
                            ProductId = new Guid("05e3d510-6866-47b9-ad75-3cf2fd330c9c"),
                            Status = 0,
                            VarKey = "Max Ekran Çözünürlüğü",
                            VarValue = "2560 x 1600"
                        },
                        new
                        {
                            Id = new Guid("676418b7-3350-4b90-9695-3317c5d76ed1"),
                            ProductId = new Guid("b9b5381c-de81-4953-a7ee-9a782b9652da"),
                            Status = 0,
                            VarKey = "Kamera",
                            VarValue = "Çift Kamera"
                        },
                        new
                        {
                            Id = new Guid("f606fdc0-62d7-4d64-a8c8-6ba578b970ad"),
                            ProductId = new Guid("b9b5381c-de81-4953-a7ee-9a782b9652da"),
                            Status = 0,
                            VarKey = "Ekran Boyutu",
                            VarValue = "10,3 inç"
                        },
                        new
                        {
                            Id = new Guid("92235e57-e23e-4e72-b82e-e6a4f5135fbf"),
                            ProductId = new Guid("b9b5381c-de81-4953-a7ee-9a782b9652da"),
                            Status = 0,
                            VarKey = "Dahili Hafıza",
                            VarValue = "64 GB"
                        },
                        new
                        {
                            Id = new Guid("d44b5315-dbb8-4005-990e-6ff89b5ee904"),
                            ProductId = new Guid("b9b5381c-de81-4953-a7ee-9a782b9652da"),
                            Status = 0,
                            VarKey = "Max Ekran Çözünürlüğü",
                            VarValue = "1920 x 1200"
                        },
                        new
                        {
                            Id = new Guid("344602f3-dcac-49c0-bc6e-523db343d05e"),
                            ProductId = new Guid("b9b5381c-de81-4953-a7ee-9a782b9652da"),
                            Status = 0,
                            VarKey = "Ram Kapasitesi",
                            VarValue = "4 GB"
                        },
                        new
                        {
                            Id = new Guid("d6010c72-0682-4708-aaf2-e114f72bcf04"),
                            ProductId = new Guid("44926cd7-1678-4808-a2b0-df95c6f865fc"),
                            Status = 0,
                            VarKey = "Ekran Ebatı",
                            VarValue = "43 inç / 108 cm"
                        },
                        new
                        {
                            Id = new Guid("897e0375-74b9-4187-970e-9ae7ac24cfa1"),
                            ProductId = new Guid("44926cd7-1678-4808-a2b0-df95c6f865fc"),
                            Status = 0,
                            VarKey = "Smart TV",
                            VarValue = "Var"
                        },
                        new
                        {
                            Id = new Guid("a8889737-8177-4ec7-8751-f1b8bcefc193"),
                            ProductId = new Guid("44926cd7-1678-4808-a2b0-df95c6f865fc"),
                            Status = 0,
                            VarKey = "Wi-Fi",
                            VarValue = "Var"
                        },
                        new
                        {
                            Id = new Guid("4e1e9808-6dec-4afa-a462-71437553e4dc"),
                            ProductId = new Guid("a4518427-e6f0-46bd-bbbd-4dcdaa92966e"),
                            Status = 0,
                            VarKey = "Ekran Ebatı",
                            VarValue = "50 inç / 127 cm"
                        },
                        new
                        {
                            Id = new Guid("dfd7051c-2ae5-475e-88cd-eb8ad920600d"),
                            ProductId = new Guid("a4518427-e6f0-46bd-bbbd-4dcdaa92966e"),
                            Status = 0,
                            VarKey = "Smart TV",
                            VarValue = "Var"
                        },
                        new
                        {
                            Id = new Guid("95e28200-0681-47cb-aefb-0d658227d6cc"),
                            ProductId = new Guid("a4518427-e6f0-46bd-bbbd-4dcdaa92966e"),
                            Status = 0,
                            VarKey = "Görüntü Teknolojisi",
                            VarValue = "LED"
                        },
                        new
                        {
                            Id = new Guid("6e605277-2a70-4065-848b-94bb78b7d198"),
                            ProductId = new Guid("a4518427-e6f0-46bd-bbbd-4dcdaa92966e"),
                            Status = 0,
                            VarKey = "Çözünürlük",
                            VarValue = "4K Ultra HD"
                        },
                        new
                        {
                            Id = new Guid("c2148545-3e8b-4ba8-a41b-bcd1cb3acaca"),
                            ProductId = new Guid("ebf25e2d-15e5-4133-ad82-156f83f4ce96"),
                            Status = 0,
                            VarKey = "Dahili Hafıza",
                            VarValue = "64 GB"
                        },
                        new
                        {
                            Id = new Guid("5271f753-a6c4-4bbd-959f-e3042be934e6"),
                            ProductId = new Guid("ebf25e2d-15e5-4133-ad82-156f83f4ce96"),
                            Status = 0,
                            VarKey = "RAM Kapasitesi",
                            VarValue = "4 GB"
                        },
                        new
                        {
                            Id = new Guid("c9953e9e-f21f-4808-9cf2-f9a325115fce"),
                            ProductId = new Guid("ebf25e2d-15e5-4133-ad82-156f83f4ce96"),
                            Status = 0,
                            VarKey = "Pil Gücü",
                            VarValue = "4680 mAh"
                        },
                        new
                        {
                            Id = new Guid("d38c3e48-224c-464f-a855-66a1b1b36e62"),
                            ProductId = new Guid("ebf25e2d-15e5-4133-ad82-156f83f4ce96"),
                            Status = 0,
                            VarKey = "Ekran Boyutu",
                            VarValue = "6,47 inç"
                        },
                        new
                        {
                            Id = new Guid("2916c35b-96c1-44f8-a019-7a0db8ce79a9"),
                            ProductId = new Guid("ebf25e2d-15e5-4133-ad82-156f83f4ce96"),
                            Status = 0,
                            VarKey = "Ön (Selfie) Kamera",
                            VarValue = "8,0 MP"
                        },
                        new
                        {
                            Id = new Guid("d3374918-ae57-4d2b-9862-0c72e8c476a7"),
                            ProductId = new Guid("ebf25e2d-15e5-4133-ad82-156f83f4ce96"),
                            Status = 0,
                            VarKey = "Kamera Çözünürlüğü",
                            VarValue = "13 MP"
                        },
                        new
                        {
                            Id = new Guid("e7ce7044-335f-4e9e-b41a-eb61a16ea070"),
                            ProductId = new Guid("49669332-44e1-4696-84c0-9ab229061315"),
                            Status = 0,
                            VarKey = "Dahili Hafıza",
                            VarValue = "128 GB"
                        },
                        new
                        {
                            Id = new Guid("c45fb327-385c-4323-8be2-7181fdd9921c"),
                            ProductId = new Guid("49669332-44e1-4696-84c0-9ab229061315"),
                            Status = 0,
                            VarKey = "RAM Kapasitesi",
                            VarValue = "8 GB"
                        },
                        new
                        {
                            Id = new Guid("d4641f47-0297-4a03-a7af-f541bfa3ca7f"),
                            ProductId = new Guid("49669332-44e1-4696-84c0-9ab229061315"),
                            Status = 0,
                            VarKey = "Pil Gücü",
                            VarValue = "4310 mAh"
                        },
                        new
                        {
                            Id = new Guid("a12fc4db-6de4-4e2d-8893-4331da061144"),
                            ProductId = new Guid("49669332-44e1-4696-84c0-9ab229061315"),
                            Status = 0,
                            VarKey = "Ekran Boyutu",
                            VarValue = "6,4 inç"
                        },
                        new
                        {
                            Id = new Guid("7dfba84d-1527-4f58-8137-ac374197a355"),
                            ProductId = new Guid("49669332-44e1-4696-84c0-9ab229061315"),
                            Status = 0,
                            VarKey = "Ön (Selfie) Kamera",
                            VarValue = "32 MP"
                        },
                        new
                        {
                            Id = new Guid("b8ccbd7b-417b-47e5-8957-e6b763438235"),
                            ProductId = new Guid("49669332-44e1-4696-84c0-9ab229061315"),
                            Status = 0,
                            VarKey = "Kamera Çözünürlüğü",
                            VarValue = "48 MP + 8 MP + 2 MP + 2 MP"
                        },
                        new
                        {
                            Id = new Guid("8dd100e2-7aa2-418f-a09c-8f07cdf82062"),
                            ProductId = new Guid("67614fef-8f67-4ba5-af0d-f35479d003f2"),
                            Status = 0,
                            VarKey = "Dahili Hafıza",
                            VarValue = "128 GB"
                        },
                        new
                        {
                            Id = new Guid("4eb55354-0905-47ea-b24d-360f17fdc09c"),
                            ProductId = new Guid("67614fef-8f67-4ba5-af0d-f35479d003f2"),
                            Status = 0,
                            VarKey = "RAM Kapasitesi",
                            VarValue = "8 GB"
                        },
                        new
                        {
                            Id = new Guid("f2f5ddcc-7e68-4738-946f-8b999e39a5c7"),
                            ProductId = new Guid("67614fef-8f67-4ba5-af0d-f35479d003f2"),
                            Status = 0,
                            VarKey = "Pil Gücü",
                            VarValue = "5020 mAh"
                        },
                        new
                        {
                            Id = new Guid("1db30347-ad02-45ee-953b-43e708e3d90a"),
                            ProductId = new Guid("67614fef-8f67-4ba5-af0d-f35479d003f2"),
                            Status = 0,
                            VarKey = "Ön (Selfie) Kamera",
                            VarValue = "16 MP"
                        },
                        new
                        {
                            Id = new Guid("4f3d8bd6-1c89-4fff-a29f-c4224be59b58"),
                            ProductId = new Guid("67614fef-8f67-4ba5-af0d-f35479d003f2"),
                            Status = 0,
                            VarKey = "Kamera Çözünürlüğü",
                            VarValue = "108 MP + 8 MP + 5 MP + 2 MP"
                        },
                        new
                        {
                            Id = new Guid("38271fb5-6217-4f3d-8a58-8d5e844bed4f"),
                            ProductId = new Guid("e55ae9f3-888d-4c69-a0e7-4403a8292d95"),
                            Status = 0,
                            VarKey = "Ön (Selfie) Kamera",
                            VarValue = "10 MP"
                        },
                        new
                        {
                            Id = new Guid("ee6f0eeb-27a1-47c5-af5f-fb0f69be9bad"),
                            ProductId = new Guid("e55ae9f3-888d-4c69-a0e7-4403a8292d95"),
                            Status = 0,
                            VarKey = "Pil Gücü",
                            VarValue = "4500 mAh"
                        },
                        new
                        {
                            Id = new Guid("2350da08-01e5-47a7-9b8d-50bf4d6b3d35"),
                            ProductId = new Guid("e55ae9f3-888d-4c69-a0e7-4403a8292d95"),
                            Status = 0,
                            VarKey = "Kamera Çözünürlüğü",
                            VarValue = "108 MP + 12 MP + 12 MP"
                        },
                        new
                        {
                            Id = new Guid("01bc3e73-7711-4629-9b8e-38656abaa1ae"),
                            ProductId = new Guid("e55ae9f3-888d-4c69-a0e7-4403a8292d95"),
                            Status = 0,
                            VarKey = "RAM Kapasitesi",
                            VarValue = "8 GB"
                        },
                        new
                        {
                            Id = new Guid("0553da36-44ef-4aca-a7a4-3de86f16d184"),
                            ProductId = new Guid("e55ae9f3-888d-4c69-a0e7-4403a8292d95"),
                            Status = 0,
                            VarKey = "Ekran Boyutu",
                            VarValue = "6,9 inç"
                        },
                        new
                        {
                            Id = new Guid("7cf79e6d-8a06-46d6-b4be-13b44e74c2a6"),
                            ProductId = new Guid("e55ae9f3-888d-4c69-a0e7-4403a8292d95"),
                            Status = 0,
                            VarKey = "Dahili Hafıza",
                            VarValue = "256 GB"
                        },
                        new
                        {
                            Id = new Guid("4e3c3fcb-5690-43e8-9372-40a9a2ce40e0"),
                            ProductId = new Guid("8bc31d49-d44c-43e7-bc87-f9bdd3b37f78"),
                            Status = 0,
                            VarKey = "Ön (Selfie) Kamera",
                            VarValue = "7,0 MP"
                        },
                        new
                        {
                            Id = new Guid("3bddf1ee-8c55-4fea-9706-3d05ac46af10"),
                            ProductId = new Guid("8bc31d49-d44c-43e7-bc87-f9bdd3b37f78"),
                            Status = 0,
                            VarKey = "Kamera Çözünürlüğü",
                            VarValue = "12 MP + 12 MP"
                        },
                        new
                        {
                            Id = new Guid("94f9e1ab-19eb-44be-b545-054c239f23ee"),
                            ProductId = new Guid("8bc31d49-d44c-43e7-bc87-f9bdd3b37f78"),
                            Status = 0,
                            VarKey = "Ekran Boyutu",
                            VarValue = "6,5 inç"
                        },
                        new
                        {
                            Id = new Guid("cf4ed36c-39a5-4710-a96b-557939a6b74a"),
                            ProductId = new Guid("8bc31d49-d44c-43e7-bc87-f9bdd3b37f78"),
                            Status = 0,
                            VarKey = "Pil Gücü",
                            VarValue = "3174 mAh"
                        },
                        new
                        {
                            Id = new Guid("6342d65f-a727-4831-95fd-828cc1e4904d"),
                            ProductId = new Guid("8bc31d49-d44c-43e7-bc87-f9bdd3b37f78"),
                            Status = 0,
                            VarKey = "",
                            VarValue = ""
                        },
                        new
                        {
                            Id = new Guid("6707b9d6-eac9-4dc6-a5f9-76ffd24f9b7a"),
                            ProductId = new Guid("8bc31d49-d44c-43e7-bc87-f9bdd3b37f78"),
                            Status = 0,
                            VarKey = "Dahili Hafıza",
                            VarValue = "256 GB"
                        },
                        new
                        {
                            Id = new Guid("beb1492f-a8a6-4c2e-9059-d67613897598"),
                            ProductId = new Guid("8bc31d49-d44c-43e7-bc87-f9bdd3b37f78"),
                            Status = 0,
                            VarKey = "RAM Kapasitesi",
                            VarValue = "4 GB"
                        });
                });

            modelBuilder.Entity("CommercialSite.Model.Entities.ShippingSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15);

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsShippingFree")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15);

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UpdatedUserId");

                    b.ToTable("ShippingSettings");
                });

            modelBuilder.Entity("CommercialSite.Model.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15);

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("character varying(30)")
                        .HasMaxLength(30);

                    b.Property<string>("LastIPAddress")
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15);

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("character varying(12)")
                        .HasMaxLength(12);

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15);

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("UpdatedUserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5fe05137-92a9-4edd-9112-35a0eff3fe5a"),
                            AvatarUrl = "/",
                            Email = "admin@admin.com",
                            FirstName = "Admin",
                            LastIPAddress = "127.0.0.1",
                            LastLogin = new DateTime(2021, 10, 4, 22, 17, 6, 485, DateTimeKind.Local).AddTicks(9317),
                            LastName = "Admin",
                            Password = "123",
                            Status = 1,
                            Title = "admin"
                        });
                });

            modelBuilder.Entity("CommercialSite.Model.Entities.UserDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("timestamp without time zone")
                        .HasMaxLength(11);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15);

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int?>("Gender")
                        .HasColumnType("integer");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("character varying(11)")
                        .HasMaxLength(11);

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("TCKN")
                        .HasColumnType("character varying(11)")
                        .HasMaxLength(11);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15);

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("UpdatedUserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserDetails");
                });

            modelBuilder.Entity("CommercialSite.Model.Entities.Brand", b =>
                {
                    b.HasOne("CommercialSite.Model.Entities.User", "CreatedUserBrand")
                        .WithMany("CreatedUserBrands")
                        .HasForeignKey("CreatedUserId");

                    b.HasOne("CommercialSite.Model.Entities.User", "UpdatedUserBrand")
                        .WithMany("UpdatedUserBrands")
                        .HasForeignKey("UpdatedUserId");
                });

            modelBuilder.Entity("CommercialSite.Model.Entities.Category", b =>
                {
                    b.HasOne("CommercialSite.Model.Entities.User", "CreatedUserCategory")
                        .WithMany("CreatedUserCategories")
                        .HasForeignKey("CreatedUserId");

                    b.HasOne("CommercialSite.Model.Entities.User", "UpdatedUserCategory")
                        .WithMany("UpdatedUserCategories")
                        .HasForeignKey("UpdatedUserId");
                });

            modelBuilder.Entity("CommercialSite.Model.Entities.CommentReaction", b =>
                {
                    b.HasOne("CommercialSite.Model.Entities.User", "CreatedUserCommentReaction")
                        .WithMany("CreatedUserCommentReactions")
                        .HasForeignKey("CreatedUserId");

                    b.HasOne("CommercialSite.Model.Entities.ProductComment", "Comment")
                        .WithMany("CommentReactions")
                        .HasForeignKey("ProductCommentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CommercialSite.Model.Entities.User", "UpdatedUserCommentReaction")
                        .WithMany("UpdatedUserCommentReactions")
                        .HasForeignKey("UpdatedUserId");
                });

            modelBuilder.Entity("CommercialSite.Model.Entities.Product", b =>
                {
                    b.HasOne("CommercialSite.Model.Entities.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CommercialSite.Model.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CommercialSite.Model.Entities.User", "CreatedUserProduct")
                        .WithMany("CreatedUserProducts")
                        .HasForeignKey("CreatedUserId");

                    b.HasOne("CommercialSite.Model.Entities.User", "UpdatedUserProduct")
                        .WithMany("UpdatedUserProducts")
                        .HasForeignKey("UpdatedUserId");
                });

            modelBuilder.Entity("CommercialSite.Model.Entities.ProductComment", b =>
                {
                    b.HasOne("CommercialSite.Model.Entities.User", "CreatedUserProductComment")
                        .WithMany("CreatedUserProductComments")
                        .HasForeignKey("CreatedUserId");

                    b.HasOne("CommercialSite.Model.Entities.Product", "Product")
                        .WithMany("ProductComments")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CommercialSite.Model.Entities.User", "UpdatedUserProductComment")
                        .WithMany("UpdatedUserProductComments")
                        .HasForeignKey("UpdatedUserId");
                });

            modelBuilder.Entity("CommercialSite.Model.Entities.ProductDetail", b =>
                {
                    b.HasOne("CommercialSite.Model.Entities.User", "CreatedUserProductDetail")
                        .WithMany("CreatedUserProductDetails")
                        .HasForeignKey("CreatedUserId");

                    b.HasOne("CommercialSite.Model.Entities.ProductComment", "ProductComment")
                        .WithMany("ProductDetails")
                        .HasForeignKey("ProductCommentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CommercialSite.Model.Entities.Product", "Product")
                        .WithMany("ProductDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CommercialSite.Model.Entities.ProductImage", "ProductImage")
                        .WithMany("ProductDetails")
                        .HasForeignKey("ProductImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CommercialSite.Model.Entities.ProductProperty", "ProductProperty")
                        .WithMany("ProductDetails")
                        .HasForeignKey("ProductPropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CommercialSite.Model.Entities.ShippingSetting", "ShippingSetting")
                        .WithMany("ProductDetails")
                        .HasForeignKey("ShippingSettingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CommercialSite.Model.Entities.User", "UpdatedUserProductDetail")
                        .WithMany("UpdatedUserProductDetails")
                        .HasForeignKey("UpdatedUserId");
                });

            modelBuilder.Entity("CommercialSite.Model.Entities.ProductImage", b =>
                {
                    b.HasOne("CommercialSite.Model.Entities.User", "CreatedUserProductImage")
                        .WithMany("CreatedUserProductImages")
                        .HasForeignKey("CreatedUserId");

                    b.HasOne("CommercialSite.Model.Entities.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CommercialSite.Model.Entities.User", "UpdatedUserProductImage")
                        .WithMany("UpdatedUserProductImages")
                        .HasForeignKey("UpdatedUserId");
                });

            modelBuilder.Entity("CommercialSite.Model.Entities.ProductProperty", b =>
                {
                    b.HasOne("CommercialSite.Model.Entities.User", "CreatedUserProductProperty")
                        .WithMany("CreatedUserProductProperties")
                        .HasForeignKey("CreatedUserId");

                    b.HasOne("CommercialSite.Model.Entities.Product", "Product")
                        .WithMany("ProductProperties")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CommercialSite.Model.Entities.User", "UpdatedUserProductProperty")
                        .WithMany("UpdatedUserProductProperties")
                        .HasForeignKey("UpdatedUserId");
                });

            modelBuilder.Entity("CommercialSite.Model.Entities.ShippingSetting", b =>
                {
                    b.HasOne("CommercialSite.Model.Entities.User", "CreatedUserShippingSetting")
                        .WithMany("CreatedUserShippingSettings")
                        .HasForeignKey("CreatedUserId");

                    b.HasOne("CommercialSite.Model.Entities.Product", "Product")
                        .WithMany("ShippingSettings")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CommercialSite.Model.Entities.User", "UpdatedUserShippingSetting")
                        .WithMany("UpdatedUserShippingSettings")
                        .HasForeignKey("UpdatedUserId");
                });

            modelBuilder.Entity("CommercialSite.Model.Entities.User", b =>
                {
                    b.HasOne("CommercialSite.Model.Entities.User", "CreatedUser")
                        .WithMany("CreatedUsers")
                        .HasForeignKey("CreatedUserId");

                    b.HasOne("CommercialSite.Model.Entities.User", "UpdatedUser")
                        .WithMany("UpdatedUsers")
                        .HasForeignKey("UpdatedUserId");
                });

            modelBuilder.Entity("CommercialSite.Model.Entities.UserDetail", b =>
                {
                    b.HasOne("CommercialSite.Model.Entities.User", "CreatedUserDetail")
                        .WithMany("CreatedUserDetails")
                        .HasForeignKey("CreatedUserId");

                    b.HasOne("CommercialSite.Model.Entities.User", "UpdatedUserDetail")
                        .WithMany("UpdatedUserDetails")
                        .HasForeignKey("UpdatedUserId");

                    b.HasOne("CommercialSite.Model.Entities.User", "User")
                        .WithMany("UserDetails")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
